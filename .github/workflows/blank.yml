# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install jsonnet
        run: sudo snap install jsonnet
          
      - name: Run jsonnet
        env:
          INSTANA_BASE_URL: ${{ secrets.INSTANA_BASE_URL }}
          INSTANA_USER_ID: ${{ secrets.INSTANA_USER_ID }}
          INSTANA_API_TOKEN: ${{ secrets.INSTANA_API_TOKEN }}
          INSTANA_API_TOKEN_RELATION_ID: ${{ secrets.INSTANA_API_TOKEN_RELATION_ID }}
        run: |
          jsonnet specs/01-k8s-podlabel.libsonnet --ext-str INSTANA_BASE_URL --ext-str INSTANA_USER_ID --ext-str INSTANA_API_TOKEN_RELATION_ID > 01-k8s-podlabel.json
          
      - name: Create Dashboard
        env:
          INSTANA_BASE_URL: ${{ secrets.INSTANA_BASE_URL }}
          INSTANA_USER_ID: ${{ secrets.INSTANA_USER_ID }}
          INSTANA_API_TOKEN: ${{ secrets.INSTANA_API_TOKEN }}
        run: |
          DASHBOARD_ID=$(curl -s --request POST --url $INSTANA_BASE_URL/api/custom-dashboard --header "authorization: apiToken $INSTANA_API_TOKEN" --header 'content-type: application/json' --data @01-k8s-podlabel.json | jq -r .id)
          DASHBOARD_GET_HTTPCODE=$(curl -s -I -w "%{http_code}" -o /dev/null -H "authorization: apiToken $INSTANA_API_TOKEN" "$INSTANA_BASE_URL/api/custom-dashboard/$DASHBOARD_ID")
          if [ $DASHBOARD_GET_HTTPCODE = 200 ]; then echo "Status 200. All good."; else echo "Error. Unexpected status code: $DASHBOARD_GET_HTTPCODE its not 200."; exit 1; fi

      - name: Delete Dashboard
        env:
          INSTANA_BASE_URL: ${{ secrets.INSTANA_BASE_URL }}
          INSTANA_USER_ID: ${{ secrets.INSTANA_USER_ID }}
          INSTANA_API_TOKEN: ${{ secrets.INSTANA_API_TOKEN }}
        run: |
          DASHBOARD_GET_HTTPCODE=$(curl -s -I -w "%{http_code}" -o /dev/null -H "authorization: apiToken $INSTANA_API_TOKEN" "$INSTANA_BASE_URL/api/custom-dashboard/$DASHBOARD_ID")
          if [ $DASHBOARD_GET_HTTPCODE = 200 ]; then echo "Status 200. All good."; else echo "Error. Unexpected status code: $DASHBOARD_GET_HTTPCODE its not 200."; exit 1; fi
