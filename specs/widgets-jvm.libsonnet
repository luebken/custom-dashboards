local _config = import 'config-k8s.libsonnet';
local metrics = import 'metrics-infrastructure.libsonnet';
local tagFilterExpression = import 'tagFilterExpressions.libsonnet';

{
  jvmHeapMemory: {
    id: 'KU9C-sB0Z4G3W5b8',
    title: 'Heap Memory',
    width: '<NEEDS TO BE SET>',
    height: '<NEEDS TO BE SET>',
    x: '<NEEDS TO BE SET>',
    y: '<NEEDS TO BE SET>',
    type: 'chart',
    config: {
      y1: {
        formatter: 'bytes.compact',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'jvm.heap.maxSize',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Heap Memory',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
          {
            color: '',
            metric: 'memory.used',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Heap Used',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
        ],
      },
      y2: {
        formatter: 'number.detailed',
        renderer: 'line',
        metrics: [],
      },
      type: 'TIME_SERIES',
    },
  },
  jvmThreads: {
    id: '1laP7bDAm97mNaKV',
    title: 'JVM Threads',
    width: '<NEEDS TO BE SET>',
    height: '<NEEDS TO BE SET>',
    x: '<NEEDS TO BE SET>',
    y: '<NEEDS TO BE SET>',
    type: 'chart',
    config: {
      y1: {
        formatter: 'number.detailed',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'threads.new',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'New',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
          {
            color: '',
            metric: 'threads.runnable',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Runnable',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
          {
            color: '',
            metric: 'threads.timed-waiting',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Timed Waiting',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
          {
            color: '',
            metric: 'threads.waiting',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: ' Waiting',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
          {
            color: '',
            metric: 'threads.blocked',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Blocked',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
        ],
      },
      y2: {
        formatter: 'number.detailed',
        renderer: 'line',
        metrics: [],
      },
      type: 'TIME_SERIES',
    },
  },
  jvmGC: {
    id: 'S1uOjPbCnPT9zVm_',
    title: 'Garbage Collection',
    width: '<NEEDS TO BE SET>',
    height: '<NEEDS TO BE SET>',
    x: '<NEEDS TO BE SET>',
    y: '<NEEDS TO BE SET>',
    type: 'chart',
    config: {
      y1: {
        formatter: 'millis.detailed',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'gc.Copy.time',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Copy Time',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
          {
            color: '',
            metric: 'gc.MarkSweepCompact.time',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Mark Sweep Compact Time',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
        ],
      },
      y2: {
        formatter: 'number.detailed',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'gc.Copy.inv',
            tagFilterExpression: tagFilterExpression.k8sNamespace,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Invocations',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'jvmRuntimePlatform',
          },
        ],
      },
      type: 'TIME_SERIES',
    },
  },
}
