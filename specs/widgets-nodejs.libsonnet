local _config = import 'config-k8s.libsonnet';
local metrics = import 'metrics-infrastructure.libsonnet';
local filter = import 'tagFilterExpressions.libsonnet';
{
  gcActivity:
    {
      id: 'zO589XFsswnpo1a_',
      title: 'NodeJS GC Activity',
      width: '<NEEDS TO BE SET>',
      height: '<NEEDS TO BE SET>',
      x: '<NEEDS TO BE SET>',
      y: '<NEEDS TO BE SET>',
      type: 'chart',
      config: {
        y1: {
          formatter: 'millis.detailed',
          renderer: 'line',
          metrics: [
            {
              color: '',
              metric: 'gc.gcPause',
              tagFilterExpression: filter.k8sNamespaceAndPodLabel,
              timeShift: 0,
              compareToTimeShifted: false,
              aggregation: 'MEAN',
              label: 'GC Pause',
              source: 'INFRASTRUCTURE_METRICS',
              type: 'nodeJsRuntimePlatform',
            },
          ],
        },
        y2: {
          formatter: 'number.detailed',
          renderer: 'point',
          metrics: [],
        },
        type: 'TIME_SERIES',
      },
    },
  eventLoop: {
    id: 'VfoVv-rtgwIEoAPV',
    title: 'NodeJS Event Loop',
    width: '<NEEDS TO BE SET>',
    height: '<NEEDS TO BE SET>',
    x: '<NEEDS TO BE SET>',
    y: '<NEEDS TO BE SET>',
    type: 'chart',
    config: {
      y1: {
        formatter: 'millis.detailed',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'libuv.max',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Longest time spent in single loop',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
          {
            color: '',
            metric: 'libuv.sum',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Total time spent in loop',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
          {
            color: '',
            metric: 'libuv.lag',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Event loop lag',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
        ],
      },
      y2: {
        formatter: 'number.detailed',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'libuv.num',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Loops per second',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
        ],
      },
      type: 'TIME_SERIES',
    },
  },
  memoryUsage: {
    id: 'P9q2qpFxMtfTZYw-',
    title: 'NodeJS Memory Usage',
    width: '<NEEDS TO BE SET>',
    height: '<NEEDS TO BE SET>',
    x: '<NEEDS TO BE SET>',
    y: '<NEEDS TO BE SET>',
    type: 'chart',
    config: {
      y1: {
        formatter: 'bytes.detailed',
        renderer: 'line',
        metrics: [
          {
            color: '',
            metric: 'memory.rss',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'RSS',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
          {
            color: '',
            metric: 'memory.heapUsed',
            tagFilterExpression: {
              name: 'kubernetes.pod.label',
              type: 'TAG_FILTER',
              value: 'app=cart',
              operator: 'EQUALS',
            },
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Heap',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
          {
            color: '',
            metric: 'gc.usedHeapSizeAfterGc',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: 'Heap After GC',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
        ],
      },
      y2: {
        formatter: 'number.detailed',
        renderer: 'point',
        metrics: [
          {
            color: '',
            metric: 'gc.majorGcs',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: '#Major GCs',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
          {
            color: '',
            metric: 'gc.majorGcs',
            tagFilterExpression: filter.k8sNamespaceAndPodLabel,
            timeShift: 0,
            compareToTimeShifted: false,
            aggregation: 'MEAN',
            label: '#Minor GCs',
            source: 'INFRASTRUCTURE_METRICS',
            type: 'nodeJsRuntimePlatform',
          },
        ],
      },
      type: 'TIME_SERIES',
    },
  },
}
